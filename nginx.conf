worker_processes ${{NUM_WORKERS}};
error_log logs/error.log notice;
daemon off;
pid logs/nginx.pid;

events {
	worker_connections 1024;
}

http {
	# http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
	limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

	client_body_temp_path temp/client_body;
	proxy_temp_path temp/proxy;
	fastcgi_temp_path temp/fastcgi;
	uwsgi_temp_path temp/uwsgi;
	scgi_temp_path temp/scgi;
	
	init_by_lua_block {
		require("lpeg")
		require("socket")
		require("ltn12")
		require("mime")
	}
	
	init_worker_by_lua_file "init_worker/init.lua";
	
	include mime.types;

	server {
		listen ${{PORT}};
		lua_code_cache ${{CODE_CACHE}};

		location / {
			limit_req zone=one burst=120 delay=60;
			# limit_req zone=one burst=5 nodelay;
			set $_url "";
			default_type text/html;
			content_by_lua_block {
				require("lapis").serve("app")
			}
		}

		location /proxy {
			internal;
			rewrite_by_lua "
				local req = ngx.req
				
				for k,v in pairs(req.get_headers()) do
					if k ~= 'content-length' then
						req.clear_header(k)
					end
				end
				
				if ngx.ctx.headers then
					for k,v in pairs(ngx.ctx.headers) do
						req.set_header(k, v)
					end
				end
			";
			
			resolver 8.8.8.8 ipv6=off;
			proxy_http_version 1.1;
			proxy_pass $_url;
		}

		location /api/static/ {
			alias static/;
		}

		location /favicon.ico {
			alias static/favicon.ico;
		}
	}
}
